#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <filesystem>

using namespace std;
namespace fs = std::filesystem;

// ---------- Logger With Rotating Logs ----------
const string baseLogFile = "log.txt";
const size_t MAX_SIZE = 1024 * 1024; // 1MB

void writeLog(const string& message) {
    if (fs::exists(baseLogFile) && fs::file_size(baseLogFile) >= MAX_SIZE) {
        // Rotate logs
        int count = 1;
        string newName;
        do {
            newName = "log" + to_string(count++) + ".txt";
        } while (fs::exists(newName));
        fs::rename(baseLogFile, newName);
        cout << "Log rotated to: " << newName << endl;
    }

    ofstream out(baseLogFile, ios::app);
    out << message << endl;
    out.close();
}

// ---------- To-Do List Manager ----------
const string todoFile = "todo.txt";

void addTask(const string& task) {
    ofstream out(todoFile, ios::app);
    out << "[ ] " << task << endl;
    out.close();
    cout << "Task added.\n";
}

void viewTasks() {
    ifstream in(todoFile);
    string line;
    cout << "\n--- Your Tasks ---\n";
    int index = 1;
    while (getline(in, line)) {
        cout << index++ << ". " << line << endl;
    }
    in.close();
}

void markTaskDone(int taskNumber) {
    ifstream in(todoFile);
    vector<string> lines;
    string line;
    int i = 1;

    while (getline(in, line)) {
        if (i == taskNumber && line.find("[ ]") != string::npos) {
            line.replace(0, 3, "[X]");
        }
        lines.push_back(line);
        i++;
    }
    in.close();

    ofstream out(todoFile);
    for (const string& l : lines) {
        out << l << endl;
    }
    out.close();

    cout << "Task marked as done.\n";
}

// ---------- Menu ----------
void todoMenu() {
    int choice;
    string task;
    int taskNum;

    do {
        cout << "\n--- To-Do List Menu ---\n";
        cout << "1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Mark Task as Done\n";
        cout << "0. Exit\n";
        cout << "Enter choice: ";
        cin >> choice;
        cin.ignore();

        switch (choice) {
            case 1:
                cout << "Enter task: ";
                getline(cin, task);
                addTask(task);
                break;
            case 2:
                viewTasks();
                break;
            case 3:
                cout << "Enter task number to mark done: ";
                cin >> taskNum;
                markTaskDone(taskNum);
                break;
            case 0:
                cout << "Exiting To-Do List Manager.\n";
                break;
            default:
                cout << "Invalid option.\n";
        }
    } while (choice != 0);
}

int main() {
    int mainChoice;
    string logMsg;

    do {
        cout << "\n===== MAIN MENU =====\n";
        cout << "1. Write Log\n";
        cout << "2. Open To-Do List Manager\n";
        cout << "0. Exit\n";
        cout << "Enter your choice: ";
        cin >> mainChoice;
        cin.ignore();

        switch (mainChoice) {
            case 1:
                cout << "Enter log message: ";
                getline(cin, logMsg);
                writeLog(logMsg);
                break;
            case 2:
                todoMenu();
                break;
            case 0:
                cout << "Goodbye!\n";
                break;
            default:
                cout << "Invalid choice.\n";
        }
    } while (mainChoice != 0);

    return 0;
}
